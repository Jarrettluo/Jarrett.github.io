{"title":"Javascript 对象数组取差集和交集的方法","uid":"96d44811f44a8268573d11efdeedbe54","slug":"Javascript-对象数组取差集和交集的方法","date":"2021-10-18T07:12:09.000Z","updated":"2021-11-14T06:25:48.538Z","comments":true,"path":"api/articles/Javascript-对象数组取差集和交集的方法.json","keywords":null,"cover":"http://h2.ioliu.cn/bing/MistyForest_ZH-CN3024731044_1920x1080.jpg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>对象数组常会进行取交集或者差集的操作。<br>假设有对象数组A和对象数组B，常规方法是比较B对象数组与A对象数组的差异，进而找到其差集或者交集。<br>但是现在面临的问题是数组A 和数组B中的对象可能不完全一样的情况，可采用以下方法解决该问题。</p>\n<h1 id=\"对象数组的定义\"><a href=\"#对象数组的定义\" class=\"headerlink\" title=\"对象数组的定义\"></a>对象数组的定义</h1><p>我们把对象数组A定义为长数组，其中包含的对象属性包括了<code>name, age, weight </code>等三个属性；对象数组B定义为短数组，这里是指其元素个数小于数组A，其对象属性包括了<code>name, age</code>等2个属性。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let wideArray &#x3D; [&#123;name: &quot;luojiarui&quot;, age: 18, weight: 78&#125;, &#123;name: &quot;zhangqirui&quot;, age: 28, weight: 70&#125;];\nlet shortArray &#x3D; [&#123;name: &quot;zhangqirui&quot;, age: 28&#125;];<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果我们进行取对象的交集，那么就首先需要将对象属性进行重新处理为一样的属性，再进行差异比较。</p>\n<p>最终的差集是：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">finalArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"luojiarui\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> weight<span class=\"token operator\">:</span> <span class=\"token number\">78</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>最终的交集是：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">finalArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"zhangqirui\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> weight<span class=\"token operator\">:</span> <span class=\"token number\">70</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"找出对象中的特定的属性\"><a href=\"#找出对象中的特定的属性\" class=\"headerlink\" title=\"找出对象中的特定的属性\"></a>找出对象中的特定的属性</h1><p>对象中特定属性的查找可以采用遍历对象的方法，我们这里采用<code>reduce</code>。<br>首先我们看官方案例中计算，数组里所有值的和。这里采用累计器和当前值不断累积，最终计算出整个数组的和。注意在reduce的第二个参数中可以给出累加器的初始值，这里代码给出的是0。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">var sum &#x3D; [0, 1, 2, 3].reduce(function (accumulator, currentValue) &#123;\n  return accumulator + currentValue;\n&#125;, 0);\n&#x2F;&#x2F; 和为 6<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以写成箭头函数的形式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">var total &#x3D; [ 0, 1, 2, 3 ].reduce(\n  ( acc, cur ) &#x3D;&gt; acc + cur,\n  0\n);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里，我封装了一个函数，名叫<code>pick</code>。其用途是找出对象中指定的属性，且属性是必须包含。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 参考网络上关于对象属性查找的方法，但是其没有指定必须包含该属性。</span>\n  <span class=\"token comment\">// return arr.reduce((iter, val) => (val in obj &amp;&amp; (iter[val] = obj[val]), iter), &#123;&#125;);</span>\n  <span class=\"token comment\">// 如果你打算提供一个初始值作为reduce()方法的第二个参数</span>\n  <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">iter<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        iter<span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        iter <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> iter<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>应用示例：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"ljr\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> weight<span class=\"token operator\">:</span> <span class=\"token number\">68</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newObject <span class=\"token operator\">=</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从对象中取到name和age属性。</span>\n<span class=\"token comment\">// output: &#123; name: \"ljr\", age: 23&#125;;</span>\n\n<span class=\"token keyword\">var</span> newObject1 <span class=\"token operator\">=</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从对象中取到name和price 属性。</span>\n<span class=\"token comment\">// output : &#123;&#125;; // 由于对象中不存在price属性，因此返回值是空对象。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关于reduce的更多介绍可以查阅mdn。</p></blockquote>\n<p>Reduce() 方法讲解： <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce</a></p>\n<h1 id=\"差集和交集的计算\"><a href=\"#差集和交集的计算\" class=\"headerlink\" title=\"差集和交集的计算\"></a>差集和交集的计算</h1><p>接下来通过遍历长数组元素，找出差集和交集。这里采用了很方便的一种比较方式，那就是使用indexOf。<br>但是该方法主要是应用于简单类型的数组或者字符串中，不能比较对象数组。<br>因此将对象数组转换为字符串进行比较。字符串比较的前提是，在前文中已经将对象数组进行重整，每个数组元素的属性已经是一致的。<br>indexOf 的原理是查找被查元素的索引，如果不能查到该元素则返回-1，如果能找到则返回该元素的索引值。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 遍历长对象数组，同时取到两个对象数组的差集，交集\nvar substractedArray &#x3D; [], intersectionArray &#x3D; []; &#x2F;&#x2F; 差集， 交集\nwideArray.forEach( value &#x3D;&gt; &#123;\n    &#x2F;&#x2F; 等于-1 表示 不存在，大于-1 表示存在\n    if(JSON.stringify(pickedShortArray)\n    .indexOf(JSON.stringify(pick(value,focusKeys))) &#x3D;&#x3D; -1) &#123;\n        substractedArray.push(value)\n    &#125;else &#123;\n        intersectionArray.push(value)\n    &#125;\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最终将查到的对象放入差集和交集数组中。</p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><p>默认传入参数为长对象数组，短对象数组，指定对象属性数组，差集或者交集方法。<br>默认对象属性数组为空，默认为差集方法。<br>对象属性数组可以通过<code>wideArray[0].keys</code>传入。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let wideArray &#x3D; [&#123;name: &quot;luojiarui&quot;, age: 18, weight: 78&#125;, &#123;name: &quot;zhangqirui&quot;, age: 28, weight: 70&#125;];\nlet shortArray &#x3D; [&#123;name: &quot;zhangqirui&quot;, age: 28&#125;];\nvar a &#x3D; arrayFilter(wideArray, shortArray, [ &quot;name&quot;, &quot;age&quot;], &quot;substract&quot;);\nconsole.log(a);\nvar b &#x3D; arrayFilter(wideArray, shortArray, shortArray[0].keys, &quot;intersect&quot;);\nconsole.log(b);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><p>如下是源代码，感兴趣的同学可以拷贝进行测试。</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>对象数组的交集并集<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token keyword\">let</span> wideArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"luojiarui\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> weight<span class=\"token operator\">:</span> <span class=\"token number\">78</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"zhangqirui\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> weight<span class=\"token operator\">:</span> <span class=\"token number\">70</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> shortArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"zhangqirui\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token function\">arrayFilter</span><span class=\"token punctuation\">(</span>wideArray<span class=\"token punctuation\">,</span> shortArray<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"substract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/**\n         * @desription \n         * @param \n         * @param\n         * @author 罗佳瑞\n         * @since 2021年10月18日\n         * */</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">arrayFilter</span><span class=\"token punctuation\">(</span>wideArray<span class=\"token punctuation\">,</span> shortArray<span class=\"token punctuation\">,</span> focusKeys<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"substract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>wideArray<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>shortArray<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> \n            <span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>focusKeys<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> focusKeys<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> method <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                    state<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                    info<span class=\"token operator\">:</span> <span class=\"token string\">\"Param is error!\"</span><span class=\"token punctuation\">,</span>\n                    result<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// 判断传入的对象数组长度，如果两者长度不符合要求，那么进行交换</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wideArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> shortArray<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> tempArray <span class=\"token operator\">=</span> wideArray<span class=\"token punctuation\">;</span>\n                wideArray <span class=\"token operator\">=</span> shortArray<span class=\"token punctuation\">;</span>\n                shortArray <span class=\"token operator\">=</span> tempArray<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// 定义返回参数</span>\n            <span class=\"token keyword\">var</span> finalArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n                state<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                info<span class=\"token operator\">:</span> method <span class=\"token operator\">+</span> <span class=\"token string\">\"ing array successfully!\"</span><span class=\"token punctuation\">,</span>\n                result<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 对短数组进行遍历挑选，找到符合要求的对象属性</span>\n            <span class=\"token keyword\">var</span> pickedShortArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            shortArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">var</span> pickedObject <span class=\"token operator\">=</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> focusKeys<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pickedObject <span class=\"token operator\">!=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> pickedShortArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pickedObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pickedShortArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> finalArray<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 遍历长对象数组，同时取到两个对象数组的差集，交集</span>\n            <span class=\"token keyword\">var</span> substractedArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> intersectionArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 差集， 交集</span>\n            wideArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 等于-1 表示 不存在，大于-1 表示存在</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>pickedShortArray<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span>focusKeys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    substractedArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                    intersectionArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"substract\"</span><span class=\"token operator\">:</span> \n                    finalArray<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> substractedArray<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"intersect\"</span><span class=\"token operator\">:</span>\n                    finalArray<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> intersectionArray<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span>\n                <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                    finalArray<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                    finalArray<span class=\"token punctuation\">.</span>info <span class=\"token operator\">=</span> <span class=\"token string\">\"method is error\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> finalArray<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// return arr.reduce((iter, val) => (val in obj &amp;&amp; (iter[val] = obj[val]), iter), &#123;&#125;);</span>\n            <span class=\"token comment\">// 如果你打算提供一个初始值作为reduce()方法的第二个参数</span>\n            <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">iter<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>val <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    iter<span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                    iter <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token keyword\">return</span> iter<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果您觉得上面的内容对您有帮助欢迎点赞、评论、转发！<br>更多内容请查阅作者博客：<a href=\"https://jiaruiblog.com/\">https://jiaruiblog.com</a><br>或者<code>star</code>作者github: <a href=\"https://github.com/Jarrettluo?tab=repositories\">https://github.com/Jarrettluo?tab=repositories</a></p></blockquote>\n","text":"前言对象数组常会进行取交集或者差集的操作。假设有对象数组A和对象数组B，常规方法是比较B对象数组与A对象数组的差异，进而找到其差集或者交集。但是现在面临的问题是数组A 和数组B中的对象可能不完全一样的情况，可采用以下方法解决该问题。 对象数组的定义我们把对象数组A定义为长数组，其...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"Javascript","slug":"Javascript","count":2,"path":"api/tags/Javascript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">对象数组的定义</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%BE%E5%87%BA%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84%E7%89%B9%E5%AE%9A%E7%9A%84%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">找出对象中的特定的属性</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B7%AE%E9%9B%86%E5%92%8C%E4%BA%A4%E9%9B%86%E7%9A%84%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">差集和交集的计算</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">应用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%99%84%E5%BD%95\"><span class=\"toc-text\">附录</span></a></li></ol>","author":{"name":"JIARUI's BLOG","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17515212?s=400&u=3dc2bbf2e6239369be5c37d357699a46d94404c9&v=4","link":"/","description":"数据应用大师Master <br /> <b>谋时而动 顺势而为</b>","socials":{"github":"https://github.com/Jarrettluo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/luo-jia-rui","csdn":"https://blog.csdn.net/JarrettLuo","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Docker应用连接TDengine数据库的解决方案","uid":"e1808551f050f3a6ba3836556587dcae","slug":"Docker应用连接TDengine数据库的解决方案","date":"2021-11-03T11:20:11.000Z","updated":"2021-11-14T06:26:36.239Z","comments":true,"path":"api/articles/Docker应用连接TDengine数据库的解决方案.json","keywords":null,"cover":"http://h2.ioliu.cn/bing/NewtonPumpkins_ZH-CN2560195971_1920x1080.jpg","text":"1、工作环境开发工具：IDEA，安装插件docker TDengine Version：2.0.20.5 taos jdbc Version: 2.0.22 Springboot Version: 2.4.5 Docker Version： 20.10.10 2、Dockerfi...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"后端开发","slug":"后端开发","count":1,"path":"api/categories/后端开发.json"}],"tags":[{"name":"docker","slug":"docker","count":1,"path":"api/tags/docker.json"},{"name":"TDengine","slug":"TDengine","count":1,"path":"api/tags/TDengine.json"}],"author":{"name":"JIARUI's BLOG","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17515212?s=400&u=3dc2bbf2e6239369be5c37d357699a46d94404c9&v=4","link":"/","description":"数据应用大师Master <br /> <b>谋时而动 顺势而为</b>","socials":{"github":"https://github.com/Jarrettluo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/luo-jia-rui","csdn":"https://blog.csdn.net/JarrettLuo","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"UML语言的参考案例—基于plantuml","uid":"bba9207d0ca2df362550b15c323b2f7a","slug":"UML语言的参考案例—基于plantuml","date":"2021-09-30T14:40:08.000Z","updated":"2021-09-30T14:40:41.990Z","comments":true,"path":"api/articles/UML语言的参考案例—基于plantuml.json","keywords":null,"cover":[],"text":" UML(Unified modeling language) 是统一建模语言或者标准建模语言。通过使用 UML 的面向对象图的方式，可以更明确、清晰的表达项目中的架设思想、项目结构、执行顺序等一些逻辑思维。 本文基于plantuml阐述了uml语言的典型图。PlantUML语言...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[],"tags":[],"author":{"name":"JIARUI's BLOG","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17515212?s=400&u=3dc2bbf2e6239369be5c37d357699a46d94404c9&v=4","link":"/","description":"数据应用大师Master <br /> <b>谋时而动 顺势而为</b>","socials":{"github":"https://github.com/Jarrettluo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/luo-jia-rui","csdn":"https://blog.csdn.net/JarrettLuo","juejin":"","customs":{}}}}}