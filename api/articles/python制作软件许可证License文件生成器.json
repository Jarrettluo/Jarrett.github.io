{"title":"python制作软件许可证License文件生成器","uid":"80e5c7b2462487b6594e56f63c56c243","slug":"python制作软件许可证License文件生成器","date":"2020-09-28T14:32:19.000Z","updated":"2021-09-29T15:05:51.866Z","comments":true,"path":"api/articles/python制作软件许可证License文件生成器.json","keywords":null,"cover":"http://h2.ioliu.cn/bing/PingganVillage_ZH-CN10035092925_1920x1080.jpg","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在写好软件以后，往往需要将软件打包发送给用户进行使用。但是若只希望给特定的用户进行使用，那么就需要将软件设置License（许可证）。本篇文章就来提供一种生成license文件的思路。</p></blockquote>\n<p><img src=\"./python%E5%88%B6%E4%BD%9C%E8%BD%AF%E4%BB%B6%E8%AE%B8%E5%8F%AF%E8%AF%81License%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90%E5%99%A8/1201.png\" alt=\"激活码生成器\"></p>\n<h2 id=\"1、前言\"><a href=\"#1、前言\" class=\"headerlink\" title=\"1、前言\"></a>1、前言</h2><p> 软件开发商完成一个软件的模块，希望交付给用户进行使用。软件开发商一般是希望只授权给某些用户使用，而不希望软件被其他未授权用户进行使用。因此需要开发一个软件授权的机制。<br>当用户安装或者第一次使用软件的时候，软件是没有被授权的。当用户希望将软件绑定到某一台特定的计算机进行使用时，需要将目标计算机的MAC地址告知软件开发商，收到开发商的授权以后就能正常使用软件了。<br>软件开发商收到授权请求时，获得软件安装的目标计算机的MAC地址。通过一套绑定mac地址的算法，生成了一个license，并且具有license失效的时间。生成的license同软件中内置的同一套算法生成的信息进行比对，如果比对上，那么授权成功。如果比对不上或者授权过期，那么授权失败。</p>\n<h2 id=\"2、软件License的实现办法\"><a href=\"#2、软件License的实现办法\" class=\"headerlink\" title=\"2、软件License的实现办法\"></a>2、软件License的实现办法</h2><p>[暂无]</p>\n<h2 id=\"3、使用PyQt5开发\"><a href=\"#3、使用PyQt5开发\" class=\"headerlink\" title=\"3、使用PyQt5开发\"></a>3、使用PyQt5开发</h2><h3 id=\"3-1-框架\"><a href=\"#3-1-框架\" class=\"headerlink\" title=\"3.1 框架\"></a>3.1 框架</h3><p>1、获取目标计算机的mac地址<br>2、设置license过期的时间<br>3、对mac和授权时间进行加密</p>\n<h3 id=\"3-2-算法\"><a href=\"#3-2-算法\" class=\"headerlink\" title=\"3.2 算法\"></a>3.2 算法</h3><p>算法的核心就是，对mac地址进行hash计算。为了增加生成的license文件的困难度，在mac地址之前再加上一个特定的字符，让该license生成软件的破解难度可以稍微提高。例如在这里的示例代码中，特定字符暂定为<code>first_key</code>。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Hash算法的特点是，HASH的设计以无法解为目的；简单说来就是正向简单，逆向困难。</p></blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#1、得到密钥，通过hash算法计算目标计算机的mac地址</span>\n        psw <span class=\"token operator\">=</span> hash_msg<span class=\"token punctuation\">(</span><span class=\"token string\">'first_key'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mac_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#2、新建一个license_str 的字典，用于保存真实的mac地址，license失效时间，加密后的字符串</span>\n        license_str <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        license_str<span class=\"token punctuation\">[</span><span class=\"token string\">'mac'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>mac_addr\n        license_str<span class=\"token punctuation\">[</span><span class=\"token string\">'time_str'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>active_date\n        license_str<span class=\"token punctuation\">[</span><span class=\"token string\">'psw'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> psw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>生成的lincense_str作为一个字典，写入license文件中，是可以很直接地看出其组成。<br>因此为了更进一步加密，保证写入license文件中地信息是无序且无意义地字符串，采用AEScoder进行加密</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> AEScoder <span class=\"token keyword\">import</span> PrpCrypt\n\npc <span class=\"token operator\">=</span> PrpCrypt<span class=\"token punctuation\">(</span><span class=\"token string\">'keyskeyskeyskeys'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 初始化密钥</span>\ns_encrypt <span class=\"token operator\">=</span> pc<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>license_str<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># &lt;class 'bytes'></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>AES只有一个密钥，这个密钥既用来加密，也用于解密。例如在上面地示例代码中，采用了<code>keyskeyskeyskeys</code>作为密钥。该密钥在license生成软件中作为加密密钥，同时在使用license地软件中作为解密密钥。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> AEScoder <span class=\"token keyword\">import</span> PrpCrypt\npc <span class=\"token operator\">=</span> PrpCrypt<span class=\"token punctuation\">(</span><span class=\"token string\">'keyskeyskeyskeys'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 初始化密钥</span>\nd <span class=\"token operator\">=</span> pc<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>s_encrypt<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 解密</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>将生成的license文件保存到特定的文件中，即完成了license的生成。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># file_path即保存的文件路径</span>\n<span class=\"token comment\"># mac_str 是目标计算机的mac地址字符串</span>\n<span class=\"token comment\"># time_str 是授权目标计算机的使用时间，可以认为是license文件的失效时间</span>\nfile_path <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>file_path <span class=\"token operator\">+</span> <span class=\"token string\">'/license_'</span><span class=\"token operator\">+</span> mac_str <span class=\"token operator\">+</span> <span class=\"token string\">'_'</span> <span class=\"token operator\">+</span> time_str <span class=\"token operator\">+</span> <span class=\"token string\">'.lic'</span>\ns_encrypt <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s_encrypt<span class=\"token punctuation\">,</span> encoding <span class=\"token operator\">=</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#  bytes to str</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> lic<span class=\"token punctuation\">:</span>\n    lic<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s_encrypt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    lic<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-3-代码实现\"><a href=\"#3-3-代码实现\" class=\"headerlink\" title=\"3.3 代码实现\"></a>3.3 代码实现</h3><h4 id=\"利用Hash算法对一段字符进行运算\"><a href=\"#利用Hash算法对一段字符进行运算\" class=\"headerlink\" title=\"利用Hash算法对一段字符进行运算\"></a>利用Hash算法对一段字符进行运算</h4><p>python中实现对一段字符的运算时比较简单的，如下提供了一个示例代码。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hash_msg</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sha256 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sha256<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    res <span class=\"token operator\">=</span> sha256<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> res<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"获取本机的mac地址\"><a href=\"#获取本机的mac地址\" class=\"headerlink\" title=\"获取本机的mac地址\"></a>获取本机的mac地址</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_mac_address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    mac <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">.</span>UUID<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">.</span>getnode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">:</span>e<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"pyqt5实现界面\"><a href=\"#pyqt5实现界面\" class=\"headerlink\" title=\"pyqt5实现界面\"></a>pyqt5实现界面</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span><span class=\"token punctuation\">(</span>QMainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        QMainWindow<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        loadUi<span class=\"token punctuation\">(</span><span class=\"token string\">\"Generator.ui\"</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">405</span><span class=\"token punctuation\">,</span><span class=\"token number\">480</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMinimumSize<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QSize<span class=\"token punctuation\">(</span><span class=\"token number\">415</span><span class=\"token punctuation\">,</span><span class=\"token number\">490</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setMaximumSize<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QSize<span class=\"token punctuation\">(</span><span class=\"token number\">415</span><span class=\"token punctuation\">,</span><span class=\"token number\">490</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setWindowTitle<span class=\"token punctuation\">(</span><span class=\"token string\">'******软件激活码生成器'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setWindowIcon<span class=\"token punctuation\">(</span>QIcon<span class=\"token punctuation\">(</span><span class=\"token string\">'admin.ico'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    app <span class=\"token operator\">=</span> QApplication<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span>\n    window <span class=\"token operator\">=</span> MainWindow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    window<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>exec_<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"生成的license文件的字符串\"><a href=\"#生成的license文件的字符串\" class=\"headerlink\" title=\"生成的license文件的字符串\"></a>生成的license文件的字符串</h4><p><img src=\"./python%E5%88%B6%E4%BD%9C%E8%BD%AF%E4%BB%B6%E8%AE%B8%E5%8F%AF%E8%AF%81License%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90%E5%99%A8/1202.png\" alt=\"licensence文件\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">665dbda2a88fc8694d0df10e120236fd481087bd3e4d02c86f36ec\nba5d10eec24f5f0f5c8afb24cd8ee10c72df3c1d567a796c03a509\n5be96fdd1438e8121f0d780e6fc00784a1be9788661a7b18ed6e73\ne2ec337b251ede0f0be8f7287e63f0c69f202550dd45db55b62da9\nc886ba9da25165a6dd253ea9efe5a29e9637941c0d0a0b1cc1c6f0\n1225e6f61eaf520f24<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果您感兴趣，可以通过以上算法生成激活码。</p>\n<h2 id=\"4、程序打包\"><a href=\"#4、程序打包\" class=\"headerlink\" title=\"4、程序打包\"></a>4、程序打包</h2><p>使用PyInstaller将license文件生成软件进行打包<br>一般常规的打包代码是：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">python -m PyInstaller -F license_generator.py<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果想要给软件增加一个好看的图标，可以在打包的代码中加上打包图标的参数。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">python -m PyInstaller -F license_generator.py -i icon.ico<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在使用pyinstaller模块对pyqt5的程序进行打包的时候往往需要增加几行代码，用于指定其路径。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">app_path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Returns the base application path.\"\"\"</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> <span class=\"token string\">'frozen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Handles PyInstaller</span>\n        <span class=\"token keyword\">return</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>executable<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 使用pyinstaller打包后的exe目录</span>\n    <span class=\"token keyword\">return</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 没打包前的py目录</span>\n\nPROJECT_PATH <span class=\"token operator\">=</span> app_path<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5、结尾\"><a href=\"#5、结尾\" class=\"headerlink\" title=\"5、结尾\"></a>5、结尾</h2><p>1、该方法仅提供一种思路，即对mac地址和实效时间进行加密，生成字符。<br>2、如果需要提供源代码进行调试，或者代为开发请联系。</p>\n","text":" 在写好软件以后，往往需要将软件打包发送给用户进行使用。但是若只希望给特定的用户进行使用，那么就需要将软件设置License（许可证）。本篇文章就来提供一种生成license文件的思路。 1、前言 软件开发商完成一个软件的模块，希望交付给用户进行使用。软件开发商一般是希望只授权给...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":3,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">1、前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%BD%AF%E4%BB%B6License%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8A%9E%E6%B3%95\"><span class=\"toc-text\">2、软件License的实现办法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E4%BD%BF%E7%94%A8PyQt5%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">3、使用PyQt5开发</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">3.1 框架</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">3.2 算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3.3 代码实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8Hash%E7%AE%97%E6%B3%95%E5%AF%B9%E4%B8%80%E6%AE%B5%E5%AD%97%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">利用Hash算法对一段字符进行运算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BA%E7%9A%84mac%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">获取本机的mac地址</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pyqt5%E5%AE%9E%E7%8E%B0%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\">pyqt5实现界面</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90%E7%9A%84license%E6%96%87%E4%BB%B6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">生成的license文件的字符串</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85\"><span class=\"toc-text\">4、程序打包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81%E7%BB%93%E5%B0%BE\"><span class=\"toc-text\">5、结尾</span></a></li></ol>","author":{"name":"JIARUI's BLOG","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17515212?s=400&u=3dc2bbf2e6239369be5c37d357699a46d94404c9&v=4","link":"/","description":"数据应用大师Master <br /> <b>谋时而动 顺势而为</b>","socials":{"github":"https://github.com/Jarrettluo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/luo-jia-rui","csdn":"https://blog.csdn.net/JarrettLuo","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用NSIS打包Python安装程序","uid":"6b4aa81655f1909a16b68fb617987407","slug":"使用NSIS打包Python安装程序","date":"2020-10-28T14:44:32.000Z","updated":"2021-09-29T15:04:37.307Z","comments":true,"path":"api/articles/使用NSIS打包Python安装程序.json","keywords":null,"cover":"http://h2.ioliu.cn/bing/QingMingHuangShan_ZH-CN12993895964_1920x1080.jpg","text":"1、前言程序设计好以后会生成若干可执行文件和依赖文件。为了方便程序被更好地使用，需要将程序封装为一个安装程序。 2、平台和环境Windows系统安装NSIS下载地址：https://nsis.sourceforge.io/Download NSIS（Nullsoft Script...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"桌面程序","slug":"桌面程序","count":1,"path":"api/categories/桌面程序.json"}],"tags":[{"name":"python","slug":"python","count":3,"path":"api/tags/python.json"}],"author":{"name":"JIARUI's BLOG","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/17515212?s=400&u=3dc2bbf2e6239369be5c37d357699a46d94404c9&v=4","link":"/","description":"数据应用大师Master <br /> <b>谋时而动 顺势而为</b>","socials":{"github":"https://github.com/Jarrettluo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/luo-jia-rui","csdn":"https://blog.csdn.net/JarrettLuo","juejin":"","customs":{}}}},"next_post":{}}