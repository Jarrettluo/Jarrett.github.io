<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>软件许可证文件生成软件</title>
    <url>/2020/09/28/test-my-site/</url>
    <content><![CDATA[<h1 id="软件许可证文件生成软件"><a href="#软件许可证文件生成软件" class="headerlink" title="软件许可证文件生成软件"></a>软件许可证文件生成软件</h1><blockquote>
<p>在写好软件以后，往往需要将软件打包发送给用户进行使用。但是若只希望给特定的用户进行使用，那么就需要将软件设置License（许可证）。本篇文章就来提供一种生成license文件的思路。</p>
</blockquote>
<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-1961496363f45cd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="激活码生成器"></p>
<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p> 软件开发商完成一个软件的模块，希望交付给用户进行使用。软件开发商一般是希望只授权给某些用户使用，而不希望软件被其他未授权用户进行使用。因此需要开发一个软件授权的机制。<br>当用户安装或者第一次使用软件的时候，软件是没有被授权的。当用户希望将软件绑定到某一台特定的计算机进行使用时，需要将目标计算机的MAC地址告知软件开发商，收到开发商的授权以后就能正常使用软件了。<br>软件开发商收到授权请求时，获得软件安装的目标计算机的MAC地址。通过一套绑定mac地址的算法，生成了一个license，并且具有license失效的时间。生成的license同软件中内置的同一套算法生成的信息进行比对，如果比对上，那么授权成功。如果比对不上或者授权过期，那么授权失败。</p>
<h2 id="2、软件License的实现办法"><a href="#2、软件License的实现办法" class="headerlink" title="2、软件License的实现办法"></a>2、软件License的实现办法</h2><p>[暂无]</p>
<h2 id="3、使用PyQt5开发"><a href="#3、使用PyQt5开发" class="headerlink" title="3、使用PyQt5开发"></a>3、使用PyQt5开发</h2><h3 id="3-1-框架"><a href="#3-1-框架" class="headerlink" title="3.1 框架"></a>3.1 框架</h3><p>1、获取目标计算机的mac地址<br>2、设置license过期的时间<br>3、对mac和授权时间进行加密</p>
<h3 id="3-2-算法"><a href="#3-2-算法" class="headerlink" title="3.2 算法"></a>3.2 算法</h3><p>算法的核心就是，对mac地址进行hash计算。为了增加生成的license文件的困难度，在mac地址之前再加上一个特定的字符，让该license生成软件的破解难度可以稍微提高。例如在这里的示例代码中，特定字符暂定为<code>first_key</code>。</p>
<blockquote>
<p>Hash算法的特点是，HASH的设计以无法解为目的；简单说来就是正向简单，逆向困难。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1、得到密钥，通过hash算法计算目标计算机的mac地址</span></span><br><span class="line">        psw = hash_msg(<span class="string">&#x27;first_key&#x27;</span> + str(self.mac_addr))</span><br><span class="line"><span class="comment">#2、新建一个license_str 的字典，用于保存真实的mac地址，license失效时间，加密后的字符串</span></span><br><span class="line">        license_str = &#123;&#125;</span><br><span class="line">        license_str[<span class="string">&#x27;mac&#x27;</span>] = self.mac_addr</span><br><span class="line">        license_str[<span class="string">&#x27;time_str&#x27;</span>] = self.active_date</span><br><span class="line">        license_str[<span class="string">&#x27;psw&#x27;</span>] = psw</span><br></pre></td></tr></table></figure>

<p>生成的lincense_str作为一个字典，写入license文件中，是可以很直接地看出其组成。<br>因此为了更进一步加密，保证写入license文件中地信息是无序且无意义地字符串，采用AEScoder进行加密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> AEScoder <span class="keyword">import</span> PrpCrypt</span><br><span class="line">pc = PrpCrypt(<span class="string">&#x27;keyskeyskeyskeys&#x27;</span>)  <span class="comment"># 初始化密钥</span></span><br><span class="line">s_encrypt = pc.encrypt(str(license_str()))   <span class="comment"># &lt;class &#x27;bytes&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p>AES只有一个密钥，这个密钥既用来加密，也用于解密。例如在上面地示例代码中，采用了<code>keyskeyskeyskeys</code>作为密钥。该密钥在license生成软件中作为加密密钥，同时在使用license地软件中作为解密密钥。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> AEScoder <span class="keyword">import</span> PrpCrypt</span><br><span class="line">pc = PrpCrypt(<span class="string">&#x27;keyskeyskeyskeys&#x27;</span>)  <span class="comment"># 初始化密钥</span></span><br><span class="line">d = pc.decrypt(s_encrypt)  <span class="comment"># 解密</span></span><br></pre></td></tr></table></figure>
<p>将生成的license文件保存到特定的文件中，即完成了license的生成。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file_path即保存的文件路径</span></span><br><span class="line"><span class="comment"># mac_str 是目标计算机的mac地址字符串</span></span><br><span class="line"><span class="comment"># time_str 是授权目标计算机的使用时间，可以认为是license文件的失效时间</span></span><br><span class="line">        file_path = self.file_path + <span class="string">&#x27;/license_&#x27;</span>+ mac_str + <span class="string">&#x27;_&#x27;</span> + time_str + <span class="string">&#x27;.lic&#x27;</span></span><br><span class="line">        s_encrypt = str(s_encrypt, encoding = <span class="string">&quot;utf-8&quot;</span>)   <span class="comment">#  bytes to str</span></span><br><span class="line">        <span class="keyword">with</span> open(file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> lic:</span><br><span class="line">            lic.write(str(s_encrypt))</span><br><span class="line">            lic.close()</span><br></pre></td></tr></table></figure>
<h3 id="3-3-代码实现"><a href="#3-3-代码实现" class="headerlink" title="3.3 代码实现"></a>3.3 代码实现</h3><h3 id="利用Hash算法对一段字符进行运算"><a href="#利用Hash算法对一段字符进行运算" class="headerlink" title="利用Hash算法对一段字符进行运算"></a>利用Hash算法对一段字符进行运算</h3><p>python中实现对一段字符的运算时比较简单的，如下提供了一个示例代码。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_msg</span>(<span class="params">msg</span>):</span></span><br><span class="line">    sha256 = hashlib.sha256()</span><br><span class="line">    sha256.update(msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    res = sha256.hexdigest()</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>

<h3 id="获取本机的mac地址"><a href="#获取本机的mac地址" class="headerlink" title="获取本机的mac地址"></a>获取本机的mac地址</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mac_address</span>():</span></span><br><span class="line">    mac = uuid.UUID(int = uuid.getnode()).hex[<span class="number">-12</span>:]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;:&quot;</span>.join([mac[e:e+<span class="number">2</span>] <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">11</span>,<span class="number">2</span>)])</span><br></pre></td></tr></table></figure>

<h3 id="pyqt5实现界面"><a href="#pyqt5实现界面" class="headerlink" title="pyqt5实现界面"></a>pyqt5实现界面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class MainWindow(QMainWindow):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        QMainWindow.__init__(self)</span><br><span class="line">        loadUi(&quot;Generator.ui&quot;, self)</span><br><span class="line">        self.resize(405,480)</span><br><span class="line">        self.setMinimumSize(QtCore.QSize(415,490))</span><br><span class="line">        self.setMaximumSize(QtCore.QSize(415,490))</span><br><span class="line">        self.setWindowTitle(&#39;******软件激活码生成器&#39;)</span><br><span class="line">        self.setWindowIcon(QIcon(&#39;admin.ico&#39;))</span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    app &#x3D; QApplication(sys.argv)</span><br><span class="line">    window &#x3D; MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>

<h3 id="生成的license文件的字符串"><a href="#生成的license文件的字符串" class="headerlink" title="生成的license文件的字符串"></a>生成的license文件的字符串</h3><p><img src="https://upload-images.jianshu.io/upload_images/20506226-f927fcd4cdeb6f88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="licensence文件"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">665dbda2a88fc8694d0df10e120236fd481087bd3e4d02c86f36ecba5d10eec24f5f0f5c8afb24cd8ee10c72df3c1d567a796c03a5095be96fdd1438e8121f0d780e6fc00784a1be9788661a7b18ed6e73e2ec337b251ede0f0be8f7287e63f0c69f202550dd45db55b62da9c886ba9da25165a6dd253ea9efe5a29e9637941c0d0a0b1cc1c6f01225e6f61eaf520f24</span><br></pre></td></tr></table></figure>
<p>如果您感兴趣，可以通过以上算法生成激活码。</p>
<h2 id="4、程序打包"><a href="#4、程序打包" class="headerlink" title="4、程序打包"></a>4、程序打包</h2><p>使用PyInstaller将license文件生成软件进行打包<br>一般常规的打包代码是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m PyInstaller -F license_generator.py</span><br></pre></td></tr></table></figure>
<p>如果想要给软件增加一个好看的图标，可以在打包的代码中加上打包图标的参数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m PyInstaller -F license_generator.py -i icon.ico</span><br></pre></td></tr></table></figure>

<p>在使用pyinstaller模块对pyqt5的程序进行打包的时候往往需要增加几行代码，用于指定其路径。</p>
<pre><code>def app_path():
    &quot;&quot;&quot;Returns the base application path.&quot;&quot;&quot;
    if hasattr(sys, &#39;frozen&#39;):
        # Handles PyInstaller
        return os.path.dirname(sys.executable) # 使用pyinstaller打包后的exe目录
    return os.path.dirname(__file__) # 没打包前的py目录

PROJECT_PATH = app_path()</code></pre>
<h2 id="5、结尾"><a href="#5、结尾" class="headerlink" title="5、结尾"></a>5、结尾</h2><p>1、该方法仅提供一种思路，即对mac地址和实效时间进行加密，生成字符。<br>2、如果需要提供源代码进行调试，或者代为开发请联系。</p>
]]></content>
  </entry>
  <entry>
    <title>使用NSIS打包Python安装程序</title>
    <url>/2020/09/28/%E4%BD%BF%E7%94%A8NSIS%E6%89%93%E5%8C%85Python%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h1><p>程序设计好以后会生成若干可执行文件和依赖文件。为了方便程序被更好地使用，需要将程序封装为一个安装程序。</p>
<h1 id="2、平台和环境"><a href="#2、平台和环境" class="headerlink" title="2、平台和环境"></a>2、平台和环境</h1><h2 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a>Windows系统</h2><h2 id="安装NSIS"><a href="#安装NSIS" class="headerlink" title="安装NSIS"></a>安装NSIS</h2><p>下载地址：<a href="https://nsis.sourceforge.io/Download">https://nsis.sourceforge.io/Download</a></p>
<p>NSIS（Nullsoft Scriptable Install System）是一个开源的 Windows 系统下安装程序制作程序，提供了安装、卸载、系统设置、文件解压缩等功能。NSIS通过脚本语言来描述安装程序的行为和逻辑的。</p>
<h2 id="安装HW-VNIS-Edit"><a href="#安装HW-VNIS-Edit" class="headerlink" title="安装HW VNIS Edit"></a>安装HW VNIS Edit</h2><p>下载地址：<a href="https://sourceforge.net/projects/hmne/">https://sourceforge.net/projects/hmne/</a></p>
<p>HW VNISEDIT是他的这门语言的一个开发工具，能通过向导自动生成一些代码，下面我们做一个简单的应用程序打包步骤</p>
<h1 id="3、使用教程"><a href="#3、使用教程" class="headerlink" title="3、使用教程"></a>3、使用教程</h1><h2 id="安装NSIS-1"><a href="#安装NSIS-1" class="headerlink" title="安装NSIS"></a>安装NSIS</h2><p>成功安装NSIS如下图所示。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-1ae6e9add944cfa4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="NSIS安装成功"></p>
<h2 id="User-Manual"><a href="#User-Manual" class="headerlink" title="User Manual"></a>User Manual</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-c1e0727172774e7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="用户手册"></p>
<h2 id="进入HM-VNISEdit窗口"><a href="#进入HM-VNISEdit窗口" class="headerlink" title="进入HM VNISEdit窗口"></a>进入HM VNISEdit窗口</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-0cfa8c9636c7e4ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HM VNIS Edit"></p>
<h2 id="NSIS脚本向导"><a href="#NSIS脚本向导" class="headerlink" title="NSIS脚本向导"></a>NSIS脚本向导</h2><p>选择文件-新建向导后进入向导窗口。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-3450482433fc2b24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="NSIS脚本向导"></p>
<h2 id="填写应用程序信息"><a href="#填写应用程序信息" class="headerlink" title="填写应用程序信息"></a>填写应用程序信息</h2><p>应用程序的信息可以在安装程序右键后详细信息中查看。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-2304e80c8b9da043.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="安装程序选项"><a href="#安装程序选项" class="headerlink" title="安装程序选项"></a>安装程序选项</h2><p>选择安装程序图标或者使用默认的图标。设置安装程序的文件、语言、用户图形界面。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-35d7a0ec9ca3658a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>快闪屏幕和背景窗口基本不设置</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-efc548d1993543ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="应用程序的目录与授权信息"><a href="#应用程序的目录与授权信息" class="headerlink" title="应用程序的目录与授权信息"></a>应用程序的目录与授权信息</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-e90ef73548de51c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>如果授权文件没有删除文本框中的文本。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-a62ab9d70a9bfcbc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="指定应用程序的文件"><a href="#指定应用程序的文件" class="headerlink" title="指定应用程序的文件"></a>指定应用程序的文件</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-e29cfa3520b2d40d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>选择文件树，如果安装程序要复制文件夹，则选择文件树时勾选包含子目录。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-828e2df4c6aea94f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="应用程序图标和快捷方式"><a href="#应用程序图标和快捷方式" class="headerlink" title="应用程序图标和快捷方式"></a>应用程序图标和快捷方式</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-fc4c96e788f48119.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>可以在此过程中添加其他文件的快捷方式。其他文件如用户手册，设置程序等。</p>
<h2 id="安装后运行方式"><a href="#安装后运行方式" class="headerlink" title="安装后运行方式"></a>安装后运行方式</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-bad72b65c6b598c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="解决安装方式"><a href="#解决安装方式" class="headerlink" title="解决安装方式"></a>解决安装方式</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-ad62d40b9ba9a0e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-81ff5d4a50a6d94d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="查看脚本"><a href="#查看脚本" class="headerlink" title="查看脚本"></a>查看脚本</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-2427cd71cbdca9e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="修改脚本和输出脚本文件"><a href="#修改脚本和输出脚本文件" class="headerlink" title="修改脚本和输出脚本文件"></a>修改脚本和输出脚本文件</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-eb7545a3e5eda92b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h1 id="4、程序安装"><a href="#4、程序安装" class="headerlink" title="4、程序安装"></a>4、程序安装</h1><p><img src="https://upload-images.jianshu.io/upload_images/20506226-e835eae008633b64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-5305735650e7fd73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-e2e75a5dc1b83c8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-c7208229cc620d5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-dd8229586b41f27b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-1185c13750ef69fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h1 id="5、卸载程序"><a href="#5、卸载程序" class="headerlink" title="5、卸载程序"></a>5、卸载程序</h1><p><img src="https://upload-images.jianshu.io/upload_images/20506226-72f9ab87d38db39d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-70336fcbcc302479.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-1cf2bb36e874cdd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h1 id="6、安装程序个性化"><a href="#6、安装程序个性化" class="headerlink" title="6、安装程序个性化"></a>6、安装程序个性化</h1><p>参考文档：<a href="https://www.cnblogs.com/modou/p/3573772.html">https://www.cnblogs.com/modou/p/3573772.html</a></p>
<h1 id="7、生成安装程序出现的bug"><a href="#7、生成安装程序出现的bug" class="headerlink" title="7、生成安装程序出现的bug"></a>7、生成安装程序出现的bug</h1><h2 id="7-1-请指定安装程序语言？"><a href="#7-1-请指定安装程序语言？" class="headerlink" title="7.1 请指定安装程序语言？"></a>7.1 请指定安装程序语言？</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-a1919d9755cbb5f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><strong>解决办法：</strong></p>
<p>HM VNISEdit 这个工具是第三方脚本编辑器。在编译的时候，它需要调用 NSIS 本身。之所以不出现语言选项，是因为它没检测到你的 NSIS 安装路径。在它菜单栏“NSIS”下找到“配置”，打开的界面中，有个“路径”选项，编译器路径浏览到 NSIS 文件夹下的 makensis.exe，帮助文件浏览到 NSIS 文件夹下的 help.chm 或NSIS.chm 即可正常加载语言。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-8bca41a1357b250b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-c475c62347ff16cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="7-2-找不到License文件"><a href="#7-2-找不到License文件" class="headerlink" title="7.2 找不到License文件"></a>7.2 找不到License文件</h2><p><img src="https://upload-images.jianshu.io/upload_images/20506226-e52cd46c824f370c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>授权文件有的话就指定，没有就空着。</p>
<h2 id="7-3-安装目录没有文件夹"><a href="#7-3-安装目录没有文件夹" class="headerlink" title="7.3 安装目录没有文件夹"></a>7.3 安装目录没有文件夹</h2><p>[涉及机密] </p>
<p>文件夹没有被打包进来：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-bd84aaedc28f7879.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>选择要打包的文件，直接把要打包的目录内容全部添加进来，注意两处*.*，以及勾选“包含子目录”，不要勾选”单独添加每个文件“，编译的时候会把所有的文件打包进来的，下一步</p>
<h1 id="8、其他参考资料："><a href="#8、其他参考资料：" class="headerlink" title="8、其他参考资料："></a>8、其他参考资料：</h1><p>NSIS多语言支持：<a href="https://blog.csdn.net/zjlei712/article/details/39102337">https://blog.csdn.net/zjlei712/article/details/39102337</a></p>
<p>官方支持文档：<a href="https://nsis.sourceforge.io/FAQ">https://nsis.sourceforge.io/FAQ</a></p>
<p>NSIS使用教程：<a href="https://www.cnblogs.com/myall/p/3637759.html">https://www.cnblogs.com/myall/p/3637759.html</a></p>
]]></content>
      <categories>
        <category>python开发</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python实现自动发送天气预报到邮箱</title>
    <url>/2020/10/18/python%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8F%91%E9%80%81%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E5%88%B0%E9%82%AE%E7%AE%B1/</url>
    <content><![CDATA[<p>author：Jarrett</p>
<p>初稿时间：2020年10月8日</p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>假如有个私人助理每天向我报告我所关心信息，比如我想知道今天的热点新闻，知乎、微博的热点内容，某个技术有了什么新的突破等等信息。<br>但是，没有真人的“私人助理”但是可以有一个程序来帮我做到以上的事情。一个运行在服务端的程序，每天抓取我想要的信息，再定时地发送我的邮箱，这不就让梦想更进一步了。那就先来完成一个自动发送天气预报的程序，再将这个程序部署在树莓派上，设置为每天早上和下午定时发送到邮箱。</p>
<h3 id="天气数据的获取"><a href="#天气数据的获取" class="headerlink" title="天气数据的获取"></a>天气数据的获取</h3><p>api提供商和风天气<br>和风天气的开发者文档地址为：<br><a href="https://dev.heweather.com/docs/api/weather">https://dev.heweather.com/docs/api/weather</a></p>
<p>和风天气支持提供某个地区的天气预报和实况天气信息。其城市级天气预报API，包括全球15万个城市或地区的1-15天天气预报、实况天气、逐小时天气预报以及日出日落、月升月落等数据。<br>和风天气提供的API包括商业版和开发版。</p>
<blockquote>
<p>如需要查看更早期的版本的开发文档请访问 <a href="https://dev.heweather.com/docs/legacy/api/s6">S6版本</a>，S6版本的技术支持截止于2020年6月1日。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3天预报 HTTP GET</span><br><span class="line"></span><br><span class="line">商业版 https:&#x2F;&#x2F;api.heweather.net&#x2F;v7&#x2F;weather&#x2F;3d?&#123;请求参数&#125;</span><br><span class="line">开发版 https:&#x2F;&#x2F;devapi.heweather.net&#x2F;v7&#x2F;weather&#x2F;3d?&#123;请求参数&#125;</span><br></pre></td></tr></table></figure>

<h4 id="python链接和风天气"><a href="#python链接和风天气" class="headerlink" title="python链接和风天气"></a>python链接和风天气</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = APIURL + <span class="string">&#x27;?location= &#x27;</span> + CITY + <span class="string">&#x27;&amp;key=&#x27;</span> + KEY</span><br><span class="line">res = requests.get(url)</span><br><span class="line">res = json.loads(res.text)  <span class="comment"># Change the response to json.</span></span><br></pre></td></tr></table></figure>

<p>和风天气的返回数据如下所示。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;HeWeather6&quot;</span>:</span><br><span class="line">[&#123;<span class="attr">&quot;basic&quot;</span>:</span><br><span class="line">&#123;<span class="attr">&quot;cid&quot;</span>:<span class="string">&quot;CN101271503&quot;</span>,<span class="attr">&quot;location&quot;</span>:<span class="string">&quot;彭山&quot;</span>,<span class="attr">&quot;parent_city&quot;</span>:<span class="string">&quot;眉山&quot;</span>,<span class="attr">&quot;admin_area&quot;</span>:<span class="string">&quot;四川省&quot;</span>,<span class="attr">&quot;cnty&quot;</span>:<span class="string">&quot;中国&quot;</span>,<span class="attr">&quot;lat&quot;</span>:<span class="string">&quot;30.19229889&quot;</span>,<span class="attr">&quot;lon&quot;</span>:<span class="string">&quot;103.87010193&quot;</span>,<span class="attr">&quot;tz&quot;</span>:<span class="string">&quot;+8.00&quot;</span>&#125;,</span><br><span class="line"><span class="attr">&quot;update&quot;</span>: &#123;<span class="attr">&quot;loc&quot;</span>:<span class="string">&quot;2020-10-08 20:40&quot;</span>,<span class="attr">&quot;utc&quot;</span>:<span class="string">&quot;2020-10-08 12:40&quot;</span>&#125;,</span><br><span class="line"><span class="attr">&quot;status&quot;</span>:<span class="string">&quot;ok&quot;</span>,</span><br><span class="line"><span class="attr">&quot;daily_forecast&quot;</span>:</span><br><span class="line">[&#123;<span class="attr">&quot;cond_code_d&quot;</span>:<span class="string">&quot;305&quot;</span>,<span class="attr">&quot;cond_code_n&quot;</span>:<span class="string">&quot;305&quot;</span>,<span class="attr">&quot;cond_txt_d&quot;</span>:<span class="string">&quot;小雨&quot;</span>,<span class="attr">&quot;cond_txt_n&quot;</span>:<span class="string">&quot;小雨&quot;</span>,<span class="attr">&quot;date&quot;</span>:<span class="string">&quot;2020-10-08&quot;</span>,<span class="attr">&quot;hum&quot;</span>:<span class="string">&quot;85&quot;</span>,<span class="attr">&quot;mr&quot;</span>:<span class="string">&quot;22:51&quot;</span>,<span class="attr">&quot;ms&quot;</span>:<span class="string">&quot;12:27&quot;</span>,<span class="attr">&quot;pcpn&quot;</span>:<span class="string">&quot;1.4&quot;</span>,<span class="attr">&quot;pop&quot;</span>:<span class="string">&quot;58&quot;</span>,<span class="attr">&quot;pres&quot;</span>:<span class="string">&quot;967&quot;</span>,<span class="attr">&quot;sr&quot;</span>:<span class="string">&quot;07:03&quot;</span>,<span class="attr">&quot;ss&quot;</span>:<span class="string">&quot;18:39&quot;</span>,<span class="attr">&quot;tmp_max&quot;</span>:<span class="string">&quot;19&quot;</span>,<span class="attr">&quot;tmp_min&quot;</span>:<span class="string">&quot;16&quot;</span>,<span class="attr">&quot;uv_index&quot;</span>:<span class="string">&quot;2&quot;</span>,<span class="attr">&quot;vis&quot;</span>:<span class="string">&quot;25&quot;</span>,<span class="attr">&quot;wind_deg&quot;</span>:<span class="string">&quot;59&quot;</span>,<span class="attr">&quot;wind_dir&quot;</span>:<span class="string">&quot;东北风&quot;</span>,<span class="attr">&quot;wind_sc&quot;</span>:<span class="string">&quot;1-2&quot;</span>,<span class="attr">&quot;wind_spd&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="attr">&quot;cond_code_d&quot;</span>:<span class="string">&quot;305&quot;</span>,<span class="attr">&quot;cond_code_n&quot;</span>:<span class="string">&quot;305&quot;</span>,<span class="attr">&quot;cond_txt_d&quot;</span>:<span class="string">&quot;小雨&quot;</span>,<span class="attr">&quot;cond_txt_n&quot;</span>:<span class="string">&quot;小雨&quot;</span>,<span class="attr">&quot;date&quot;</span>:<span class="string">&quot;2020-10-09&quot;</span>,<span class="attr">&quot;hum&quot;</span>:<span class="string">&quot;87&quot;</span>,<span class="attr">&quot;mr&quot;</span>:<span class="string">&quot;23:43&quot;</span>,<span class="attr">&quot;ms&quot;</span>:<span class="string">&quot;13:23&quot;</span>,<span class="attr">&quot;pcpn&quot;</span>:<span class="string">&quot;1.0&quot;</span>,<span class="attr">&quot;pop&quot;</span>:<span class="string">&quot;55&quot;</span>,<span class="attr">&quot;pres&quot;</span>:<span class="string">&quot;963&quot;</span>,<span class="attr">&quot;sr&quot;</span>:<span class="string">&quot;07:03&quot;</span>,<span class="attr">&quot;ss&quot;</span>:<span class="string">&quot;18:38&quot;</span>,<span class="attr">&quot;tmp_max&quot;</span>:<span class="string">&quot;20&quot;</span>,<span class="attr">&quot;tmp_min&quot;</span>:<span class="string">&quot;16&quot;</span>,<span class="attr">&quot;uv_index&quot;</span>:<span class="string">&quot;2&quot;</span>,<span class="attr">&quot;vis&quot;</span>:<span class="string">&quot;25&quot;</span>,<span class="attr">&quot;wind_deg&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="attr">&quot;wind_dir&quot;</span>:<span class="string">&quot;北风&quot;</span>,<span class="attr">&quot;wind_sc&quot;</span>:<span class="string">&quot;1-2&quot;</span>,<span class="attr">&quot;wind_spd&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="attr">&quot;cond_code_d&quot;</span>:<span class="string">&quot;305&quot;</span>,<span class="attr">&quot;cond_code_n&quot;</span>:<span class="string">&quot;305&quot;</span>,<span class="attr">&quot;cond_txt_d&quot;</span>:<span class="string">&quot;小雨&quot;</span>,<span class="attr">&quot;cond_txt_n&quot;</span>:<span class="string">&quot;小雨&quot;</span>,<span class="attr">&quot;date&quot;</span>:<span class="string">&quot;2020-10-10&quot;</span>,<span class="attr">&quot;hum&quot;</span>:<span class="string">&quot;88&quot;</span>,<span class="attr">&quot;mr&quot;</span>:<span class="string">&quot;00:00&quot;</span>,<span class="attr">&quot;ms&quot;</span>:<span class="string">&quot;14:15&quot;</span>,<span class="attr">&quot;pcpn&quot;</span>:<span class="string">&quot;1.0&quot;</span>,<span class="attr">&quot;pop&quot;</span>:<span class="string">&quot;55&quot;</span>,<span class="attr">&quot;pres&quot;</span>:<span class="string">&quot;961&quot;</span>,<span class="attr">&quot;sr&quot;</span>:<span class="string">&quot;07:04&quot;</span>,<span class="attr">&quot;ss&quot;</span>:<span class="string">&quot;18:37&quot;</span>,<span class="attr">&quot;tmp_max&quot;</span>:<span class="string">&quot;20&quot;</span>,<span class="attr">&quot;tmp_min&quot;</span>:<span class="string">&quot;17&quot;</span>,<span class="attr">&quot;uv_index&quot;</span>:<span class="string">&quot;2&quot;</span>,<span class="attr">&quot;vis&quot;</span>:<span class="string">&quot;25&quot;</span>,<span class="attr">&quot;wind_deg&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="attr">&quot;wind_dir&quot;</span>:<span class="string">&quot;北风&quot;</span>,<span class="attr">&quot;wind_sc&quot;</span>:<span class="string">&quot;1-2&quot;</span>,<span class="attr">&quot;wind_spd&quot;</span>:<span class="string">&quot;3&quot;</span>&#125;</span><br><span class="line">]&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h5 id="格式整理"><a href="#格式整理" class="headerlink" title="格式整理"></a>格式整理</h5><p>使用开发版的API只能提供三天的天气预报数据。从获取的信息中提取到天气描述、最高温度、最低温度、湿度、风向、风级、风速等信息。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">forecast = res[<span class="string">&#x27;HeWeather6&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;daily_forecast&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> forecast:</span><br><span class="line">    cond_txt_d = data[<span class="string">&#x27;cond_txt_d&#x27;</span>]  <span class="comment"># weather 天气描述</span></span><br><span class="line">    tmp_max = data[<span class="string">&#x27;tmp_max&#x27;</span>]  <span class="comment"># max temperature.</span></span><br><span class="line">    tmp_min = data[<span class="string">&#x27;tmp_min&#x27;</span>]  <span class="comment"># min tempereture.</span></span><br><span class="line">    hum = data[<span class="string">&#x27;hum&#x27;</span>]  <span class="comment"># humanity</span></span><br><span class="line">    wind_dir = data[<span class="string">&#x27;wind_dir&#x27;</span>]  <span class="comment"># wind direction.</span></span><br><span class="line">    wind_sc = data[<span class="string">&#x27;wind_sc&#x27;</span>]  <span class="comment"># wind degree.</span></span><br><span class="line">    wind_spd = data[<span class="string">&#x27;wind_spd&#x27;</span>]  <span class="comment"># wind speed.</span></span><br></pre></td></tr></table></figure>

<h5 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h5><p>邮件发送模块采用菜鸟教程的demo即可完成。<br>发送的邮箱可以选择国内的163邮箱，QQ邮箱。需要注意的是发送邮箱的token是需要到邮箱的设置页设置的，而不是常用的登录邮箱。<br>这里建议将发件人姓名(<code>username</code>)发件人的邮箱地址，收件人的姓名、收件人的邮箱地址，全部放到配置文件中。这样做的目的是方便以后扩展和修改，避免修改程序；另一方面将其加入到<code>gitingore</code>文件中，就不会被同步。</p>
<h5 id="数据-gt-格式-gt-邮件发送"><a href="#数据-gt-格式-gt-邮件发送" class="headerlink" title="数据 -&gt; 格式 -&gt; 邮件发送"></a>数据 -&gt; 格式 -&gt; 邮件发送</h5><p>通过将获取的天气预报数据整理格式，就可以发送天气预报到邮箱了。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-75062141d37e1558.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="邮箱里接收到的信息"></p>
<p>单纯的文字看上去就很“朴素”，为了增强用户的友好度，我们采用HTML美化。<br>美化的方法是首先用html设计一个网页，然后再将需要显示的数据给替换为查询的天气信息。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/20506226-016c74a11175a1e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="天气预报"></p>
<p>界面的美化是因人而异，直接copy了和风天气的UI。</p>
<h5 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h5><ul>
<li>用最简单的方式爬取和风天气的API。仅用几行代码就可以获取到天气信息，这也是很多爬虫程序的第一步。</li>
<li>邮件发送的模块是可以完全复用的。邮件发送的内容可以是普通的文本，html，图片，以及附件等。</li>
<li>这里是实现了发送邮件的内容，下一步需要将其部署在树莓派中，且设置为定时任务。</li>
</ul>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="https://www.runoob.com/python/python-email.html">菜鸟教程：Python SMTP发送邮件</a><br><a href="https://github.com/Jarrettluo/Weather_Forecast">https://github.com/Jarrettluo/Weather_Forecast</a></p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发案例：电脑自动开关机和爬取网页</title>
    <url>/2021/01/27/Java%E5%BC%80%E5%8F%91%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%B5%E8%84%91%E8%87%AA%E5%8A%A8%E5%BC%80%E5%85%B3%E6%9C%BA%E5%92%8C%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5/</url>
    <content><![CDATA[<p>author: 罗佳瑞<br>初稿时间： 2021年1月27日</p>
<h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><p> 以下案例来自于开课吧公开课教程，以下代码用于记录和参考，无其他意图。</p>
<h3 id="demo1-电脑自动关机，和取消自动关机"><a href="#demo1-电脑自动关机，和取消自动关机" class="headerlink" title="demo1: 电脑自动关机，和取消自动关机"></a>demo1: 电脑自动关机，和取消自动关机</h3><blockquote>
<p>要求是使用代码对电脑进行控制，能够实现电脑开机和关机的操作。</p>
</blockquote>
<p>实现代码如下，分别能够进行自动关机和取消自动关机。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kkb.demo;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">           <span class="comment">// 自动关机的程序，倒计时3600秒</span></span><br><span class="line">          Runtime.getRuntime().exec(<span class="string">&quot;shutdown -s -t 3600&quot;</span>);</span><br><span class="line">          <span class="comment">// 取消自动关机</span></span><br><span class="line">          Runtime.getRuntime().exec(<span class="string">&quot;shutdown -a&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="demo2：-读取网址的内容"><a href="#demo2：-读取网址的内容" class="headerlink" title="demo2： 读取网址的内容"></a>demo2： 读取网址的内容</h3><blockquote>
<p>该功能是采用Java的内置库实现对网页的访问。使用内置库<code>URL</code>连接网页，并逐行读取网页的内容。</p>
</blockquote>
<p>该demo能够拓展为爬虫功能。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kkb.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 先创建一个网址工具URL的对象，ul</span></span><br><span class="line">        URL ul = <span class="keyword">new</span> URL(<span class="string">&quot;http://www.baidu.com&quot;</span>);</span><br><span class="line">        <span class="comment">// 通过工具url， 连接网络，并得到连接工具conn</span></span><br><span class="line">        URLConnection conn = ul.openConnection();</span><br><span class="line">        <span class="comment">// 获取到用于加载资源的 输入流</span></span><br><span class="line">        InputStream is = conn.getInputStream();</span><br><span class="line">        <span class="comment">// 将输入is，装饰为能读取文字，且可以一次读取一行的缓存字符串</span></span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">                <span class="keyword">new</span> InputStreamReader(is)</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// 读取一行资源</span></span><br><span class="line">        String text = br.readLine();</span><br><span class="line">        <span class="comment">// 显示资源</span></span><br><span class="line">        System.out.println(text);</span><br><span class="line">        <span class="comment">// 关闭</span></span><br><span class="line">        br.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更多代码请访问作者博客：<a href="http://jiaruiblog.com/">http://jiaruiblog.com</a></p>
<p>欢迎点赞、转发、分享~</p>
]]></content>
      <tags>
        <tag>Java, 爬虫</tag>
      </tags>
  </entry>
</search>
